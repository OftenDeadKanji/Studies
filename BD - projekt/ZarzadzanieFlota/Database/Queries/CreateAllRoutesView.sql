/*
Deployment script for D:\USERS\KANJIKLUB\DOCUMENTS\GITHUB\AEII_2020_BD2_CHLOPEK_KOMUNIKACJA\ZARZADZANIEFLOTA\PUBLICTRANSPORT.MDF

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "D:\USERS\KANJIKLUB\DOCUMENTS\GITHUB\AEII_2020_BD2_CHLOPEK_KOMUNIKACJA\ZARZADZANIEFLOTA\PUBLICTRANSPORT.MDF"
:setvar DefaultFilePrefix "D_\USERS\KANJIKLUB\DOCUMENTS\GITHUB\AEII_2020_BD2_CHLOPEK_KOMUNIKACJA\ZARZADZANIEFLOTA\PUBLICTRANSPORT.MDF_"
:setvar DefaultDataPath "C:\Users\Kanjiklub\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Kanjiklub\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Creating [dbo].[Route]...';


GO
CREATE VIEW [dbo].[Route]
AS
SELECT [son1].[id] AS First_stop_id, [s1].[name] AS First_stop_name, [s1].[district] AS First_stop_district, [son2].[id] AS Second_stop_id, [s2].[name] AS Second_stop_name, [s2].[district] AS Second_stop_district
FROM dbo.Transits t, dbo.Stops_on_route son1, dbo.Stops_on_route son2, dbo.Stops s1, dbo.Stops s2
WHERE t.id_first_stop = son1.id
AND t.id_last_stop = son2.id
AND son1.id_stop = s1.id
AND son2.id_stop = s2.id
GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
DROP TABLE #tmpErrors
GO
PRINT N'Update complete.';


GO
